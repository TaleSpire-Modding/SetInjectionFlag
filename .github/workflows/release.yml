name: Push to nuget feed on release

on:
  push:
    branches:
      - master
    paths:
      - 'manifest.json'
  repository_dispatch:
    types: [regress_update, TaleSpire-Modding-Pipelines/AutomationDlls]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Setup Nuget
        uses: nuget/setup-nuget@v1

      - name: Checkout
        uses: actions/checkout@v2
            
      - name: Download artifact (Dispatched)
        if: ${{ github.event.client_payload.branch != null}}
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.dll_pat }}
          workflow: build.yml
          branch: ${{ github.event.client_payload.branch }}
          path: .
          repo: TaleSpire-Modding-Pipelines/AutomationDlls
      
      - name: Download artifact (Pushed)
        if: ${{ github.event.client_payload.branch != null}}
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.dll_pat }}
          workflow: build.yml
          branch: master
          path: .
          repo: TaleSpire-Modding-Pipelines/AutomationDlls

      - name: build
        run: |
          cd SetInjectionFlag
          dotnet restore SetInjectionFlag.csproj
          dotnet build SetInjectionFlag.csproj --configuration Release
          cd bin/Release
          dotnet nuget push *.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}
